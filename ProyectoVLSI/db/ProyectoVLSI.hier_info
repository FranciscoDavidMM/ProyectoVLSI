|kb_test
clk => kb_code:kb_code_unit.clk
clk => uart:uart_unit.clk
reset => kb_code:kb_code_unit.reset
reset => uart:uart_unit.reset
ps2d => kb_code:kb_code_unit.ps2d
ps2c => kb_code:kb_code_unit.ps2c
tx <= uart:uart_unit.tx


|kb_test|kb_code:kb_code_unit
clk => ps2_rx:ps2_rx_unit.clk
clk => state_reg.CLK
clk => fifo:fifo_key_unit.clk
reset => ps2_rx:ps2_rx_unit.reset
reset => state_reg.ACLR
reset => fifo:fifo_key_unit.reset
ps2d => ps2_rx:ps2_rx_unit.ps2d
ps2c => ps2_rx:ps2_rx_unit.ps2c
rd_key_code => fifo:fifo_key_unit.rd
key_code[0] <= fifo:fifo_key_unit.r_data[0]
key_code[1] <= fifo:fifo_key_unit.r_data[1]
key_code[2] <= fifo:fifo_key_unit.r_data[2]
key_code[3] <= fifo:fifo_key_unit.r_data[3]
key_code[4] <= fifo:fifo_key_unit.r_data[4]
key_code[5] <= fifo:fifo_key_unit.r_data[5]
key_code[6] <= fifo:fifo_key_unit.r_data[6]
key_code[7] <= fifo:fifo_key_unit.r_data[7]
kb_buf_empty <= fifo:fifo_key_unit.empty


|kb_test|kb_code:kb_code_unit|ps2_rx:ps2_rx_unit
clk => b_reg[1].CLK
clk => b_reg[2].CLK
clk => b_reg[3].CLK
clk => b_reg[4].CLK
clk => b_reg[5].CLK
clk => b_reg[6].CLK
clk => b_reg[7].CLK
clk => b_reg[8].CLK
clk => b_reg[9].CLK
clk => b_reg[10].CLK
clk => n_reg[0].CLK
clk => n_reg[1].CLK
clk => n_reg[2].CLK
clk => n_reg[3].CLK
clk => f_ps2c_reg.CLK
clk => filter_reg[0].CLK
clk => filter_reg[1].CLK
clk => filter_reg[2].CLK
clk => filter_reg[3].CLK
clk => filter_reg[4].CLK
clk => filter_reg[5].CLK
clk => filter_reg[6].CLK
clk => filter_reg[7].CLK
clk => state_reg~1.DATAIN
reset => b_reg[1].ACLR
reset => b_reg[2].ACLR
reset => b_reg[3].ACLR
reset => b_reg[4].ACLR
reset => b_reg[5].ACLR
reset => b_reg[6].ACLR
reset => b_reg[7].ACLR
reset => b_reg[8].ACLR
reset => b_reg[9].ACLR
reset => b_reg[10].ACLR
reset => n_reg[0].ACLR
reset => n_reg[1].ACLR
reset => n_reg[2].ACLR
reset => n_reg[3].ACLR
reset => f_ps2c_reg.ACLR
reset => filter_reg[0].ACLR
reset => filter_reg[1].ACLR
reset => filter_reg[2].ACLR
reset => filter_reg[3].ACLR
reset => filter_reg[4].ACLR
reset => filter_reg[5].ACLR
reset => filter_reg[6].ACLR
reset => filter_reg[7].ACLR
reset => state_reg~3.DATAIN
ps2d => b_next.DATAB
ps2d => b_next.DATAB
ps2c => filter_reg[7].DATAIN
rx_en => process_2.IN1
rx_done_tick <= rx_done_tick.DB_MAX_OUTPUT_PORT_TYPE
dout[0] <= b_reg[1].DB_MAX_OUTPUT_PORT_TYPE
dout[1] <= b_reg[2].DB_MAX_OUTPUT_PORT_TYPE
dout[2] <= b_reg[3].DB_MAX_OUTPUT_PORT_TYPE
dout[3] <= b_reg[4].DB_MAX_OUTPUT_PORT_TYPE
dout[4] <= b_reg[5].DB_MAX_OUTPUT_PORT_TYPE
dout[5] <= b_reg[6].DB_MAX_OUTPUT_PORT_TYPE
dout[6] <= b_reg[7].DB_MAX_OUTPUT_PORT_TYPE
dout[7] <= b_reg[8].DB_MAX_OUTPUT_PORT_TYPE


|kb_test|kb_code:kb_code_unit|fifo:fifo_key_unit
clk => empty_reg.CLK
clk => full_reg.CLK
clk => r_ptr_reg[0].CLK
clk => r_ptr_reg[1].CLK
clk => w_ptr_reg[0].CLK
clk => w_ptr_reg[1].CLK
clk => array_reg[0][0].CLK
clk => array_reg[0][1].CLK
clk => array_reg[0][2].CLK
clk => array_reg[0][3].CLK
clk => array_reg[0][4].CLK
clk => array_reg[0][5].CLK
clk => array_reg[0][6].CLK
clk => array_reg[0][7].CLK
clk => array_reg[1][0].CLK
clk => array_reg[1][1].CLK
clk => array_reg[1][2].CLK
clk => array_reg[1][3].CLK
clk => array_reg[1][4].CLK
clk => array_reg[1][5].CLK
clk => array_reg[1][6].CLK
clk => array_reg[1][7].CLK
clk => array_reg[2][0].CLK
clk => array_reg[2][1].CLK
clk => array_reg[2][2].CLK
clk => array_reg[2][3].CLK
clk => array_reg[2][4].CLK
clk => array_reg[2][5].CLK
clk => array_reg[2][6].CLK
clk => array_reg[2][7].CLK
clk => array_reg[3][0].CLK
clk => array_reg[3][1].CLK
clk => array_reg[3][2].CLK
clk => array_reg[3][3].CLK
clk => array_reg[3][4].CLK
clk => array_reg[3][5].CLK
clk => array_reg[3][6].CLK
clk => array_reg[3][7].CLK
reset => empty_reg.PRESET
reset => full_reg.ACLR
reset => r_ptr_reg[0].ACLR
reset => r_ptr_reg[1].ACLR
reset => w_ptr_reg[0].ACLR
reset => w_ptr_reg[1].ACLR
reset => array_reg[0][0].ACLR
reset => array_reg[0][1].ACLR
reset => array_reg[0][2].ACLR
reset => array_reg[0][3].ACLR
reset => array_reg[0][4].ACLR
reset => array_reg[0][5].ACLR
reset => array_reg[0][6].ACLR
reset => array_reg[0][7].ACLR
reset => array_reg[1][0].ACLR
reset => array_reg[1][1].ACLR
reset => array_reg[1][2].ACLR
reset => array_reg[1][3].ACLR
reset => array_reg[1][4].ACLR
reset => array_reg[1][5].ACLR
reset => array_reg[1][6].ACLR
reset => array_reg[1][7].ACLR
reset => array_reg[2][0].ACLR
reset => array_reg[2][1].ACLR
reset => array_reg[2][2].ACLR
reset => array_reg[2][3].ACLR
reset => array_reg[2][4].ACLR
reset => array_reg[2][5].ACLR
reset => array_reg[2][6].ACLR
reset => array_reg[2][7].ACLR
reset => array_reg[3][0].ACLR
reset => array_reg[3][1].ACLR
reset => array_reg[3][2].ACLR
reset => array_reg[3][3].ACLR
reset => array_reg[3][4].ACLR
reset => array_reg[3][5].ACLR
reset => array_reg[3][6].ACLR
reset => array_reg[3][7].ACLR
rd => Mux8.IN5
rd => Mux9.IN5
rd => Mux10.IN5
rd => Mux11.IN5
rd => Mux12.IN5
rd => Mux13.IN5
wr => Mux8.IN4
wr => Mux9.IN4
wr => Mux10.IN4
wr => Mux11.IN4
wr => Mux12.IN4
wr => Mux13.IN4
wr => wr_en.IN1
w_data[0] => array_reg.DATAB
w_data[0] => array_reg.DATAB
w_data[0] => array_reg.DATAB
w_data[0] => array_reg.DATAB
w_data[1] => array_reg.DATAB
w_data[1] => array_reg.DATAB
w_data[1] => array_reg.DATAB
w_data[1] => array_reg.DATAB
w_data[2] => array_reg.DATAB
w_data[2] => array_reg.DATAB
w_data[2] => array_reg.DATAB
w_data[2] => array_reg.DATAB
w_data[3] => array_reg.DATAB
w_data[3] => array_reg.DATAB
w_data[3] => array_reg.DATAB
w_data[3] => array_reg.DATAB
w_data[4] => array_reg.DATAB
w_data[4] => array_reg.DATAB
w_data[4] => array_reg.DATAB
w_data[4] => array_reg.DATAB
w_data[5] => array_reg.DATAB
w_data[5] => array_reg.DATAB
w_data[5] => array_reg.DATAB
w_data[5] => array_reg.DATAB
w_data[6] => array_reg.DATAB
w_data[6] => array_reg.DATAB
w_data[6] => array_reg.DATAB
w_data[6] => array_reg.DATAB
w_data[7] => array_reg.DATAB
w_data[7] => array_reg.DATAB
w_data[7] => array_reg.DATAB
w_data[7] => array_reg.DATAB
empty <= empty_reg.DB_MAX_OUTPUT_PORT_TYPE
full <= full_reg.DB_MAX_OUTPUT_PORT_TYPE
r_data[0] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE
r_data[1] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
r_data[2] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
r_data[3] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
r_data[4] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
r_data[5] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
r_data[6] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
r_data[7] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|kb_test|uart:uart_unit
clk => mod_m_counter:baud_gen_unit.clk
clk => uart_rx:uart_rx_unit.clk
clk => fifo:fifo_rx_unit.clk
clk => fifo:fifo_tx_unit.clk
clk => uart_tx:uart_tx_unit.clk
reset => mod_m_counter:baud_gen_unit.reset
reset => uart_rx:uart_rx_unit.reset
reset => fifo:fifo_rx_unit.reset
reset => fifo:fifo_tx_unit.reset
reset => uart_tx:uart_tx_unit.reset
rd_uart => fifo:fifo_rx_unit.rd
wr_uart => fifo:fifo_tx_unit.wr
rx => uart_rx:uart_rx_unit.rx
w_data[0] => fifo:fifo_tx_unit.w_data[0]
w_data[1] => fifo:fifo_tx_unit.w_data[1]
w_data[2] => fifo:fifo_tx_unit.w_data[2]
w_data[3] => fifo:fifo_tx_unit.w_data[3]
w_data[4] => fifo:fifo_tx_unit.w_data[4]
w_data[5] => fifo:fifo_tx_unit.w_data[5]
w_data[6] => fifo:fifo_tx_unit.w_data[6]
w_data[7] => fifo:fifo_tx_unit.w_data[7]
tx_full <= fifo:fifo_tx_unit.full
rx_empty <= fifo:fifo_rx_unit.empty
r_data[0] <= fifo:fifo_rx_unit.r_data[0]
r_data[1] <= fifo:fifo_rx_unit.r_data[1]
r_data[2] <= fifo:fifo_rx_unit.r_data[2]
r_data[3] <= fifo:fifo_rx_unit.r_data[3]
r_data[4] <= fifo:fifo_rx_unit.r_data[4]
r_data[5] <= fifo:fifo_rx_unit.r_data[5]
r_data[6] <= fifo:fifo_rx_unit.r_data[6]
r_data[7] <= fifo:fifo_rx_unit.r_data[7]
tx <= uart_tx:uart_tx_unit.tx


|kb_test|uart:uart_unit|mod_m_counter:baud_gen_unit
clk => r_reg[0].CLK
clk => r_reg[1].CLK
clk => r_reg[2].CLK
clk => r_reg[3].CLK
clk => r_reg[4].CLK
clk => r_reg[5].CLK
clk => r_reg[6].CLK
clk => r_reg[7].CLK
reset => r_reg[0].ACLR
reset => r_reg[1].ACLR
reset => r_reg[2].ACLR
reset => r_reg[3].ACLR
reset => r_reg[4].ACLR
reset => r_reg[5].ACLR
reset => r_reg[6].ACLR
reset => r_reg[7].ACLR
max_tick <= Equal0.DB_MAX_OUTPUT_PORT_TYPE
q[0] <= r_reg[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= r_reg[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= r_reg[2].DB_MAX_OUTPUT_PORT_TYPE
q[3] <= r_reg[3].DB_MAX_OUTPUT_PORT_TYPE
q[4] <= r_reg[4].DB_MAX_OUTPUT_PORT_TYPE
q[5] <= r_reg[5].DB_MAX_OUTPUT_PORT_TYPE
q[6] <= r_reg[6].DB_MAX_OUTPUT_PORT_TYPE
q[7] <= r_reg[7].DB_MAX_OUTPUT_PORT_TYPE


|kb_test|uart:uart_unit|uart_rx:uart_rx_unit
clk => b_reg[0].CLK
clk => b_reg[1].CLK
clk => b_reg[2].CLK
clk => b_reg[3].CLK
clk => b_reg[4].CLK
clk => b_reg[5].CLK
clk => b_reg[6].CLK
clk => b_reg[7].CLK
clk => n_reg[0].CLK
clk => n_reg[1].CLK
clk => n_reg[2].CLK
clk => s_reg[0].CLK
clk => s_reg[1].CLK
clk => s_reg[2].CLK
clk => s_reg[3].CLK
clk => state_reg~1.DATAIN
reset => b_reg[0].ACLR
reset => b_reg[1].ACLR
reset => b_reg[2].ACLR
reset => b_reg[3].ACLR
reset => b_reg[4].ACLR
reset => b_reg[5].ACLR
reset => b_reg[6].ACLR
reset => b_reg[7].ACLR
reset => n_reg[0].ACLR
reset => n_reg[1].ACLR
reset => n_reg[2].ACLR
reset => s_reg[0].ACLR
reset => s_reg[1].ACLR
reset => s_reg[2].ACLR
reset => s_reg[3].ACLR
reset => state_reg~3.DATAIN
rx => b_next.DATAB
rx => state_next.OUTPUTSELECT
rx => state_next.OUTPUTSELECT
rx => state_next.OUTPUTSELECT
rx => state_next.OUTPUTSELECT
rx => s_next.OUTPUTSELECT
rx => s_next.OUTPUTSELECT
rx => s_next.OUTPUTSELECT
rx => s_next.OUTPUTSELECT
s_tick => state_next.OUTPUTSELECT
s_tick => state_next.OUTPUTSELECT
s_tick => state_next.OUTPUTSELECT
s_tick => state_next.OUTPUTSELECT
s_tick => s_next.OUTPUTSELECT
s_tick => s_next.OUTPUTSELECT
s_tick => s_next.OUTPUTSELECT
s_tick => s_next.OUTPUTSELECT
s_tick => n_next.OUTPUTSELECT
s_tick => n_next.OUTPUTSELECT
s_tick => n_next.OUTPUTSELECT
s_tick => s_next.OUTPUTSELECT
s_tick => s_next.OUTPUTSELECT
s_tick => s_next.OUTPUTSELECT
s_tick => s_next.OUTPUTSELECT
s_tick => b_next.OUTPUTSELECT
s_tick => b_next.OUTPUTSELECT
s_tick => b_next.OUTPUTSELECT
s_tick => b_next.OUTPUTSELECT
s_tick => b_next.OUTPUTSELECT
s_tick => b_next.OUTPUTSELECT
s_tick => b_next.OUTPUTSELECT
s_tick => b_next.OUTPUTSELECT
s_tick => state_next.OUTPUTSELECT
s_tick => state_next.OUTPUTSELECT
s_tick => state_next.OUTPUTSELECT
s_tick => state_next.OUTPUTSELECT
s_tick => n_next.OUTPUTSELECT
s_tick => n_next.OUTPUTSELECT
s_tick => n_next.OUTPUTSELECT
s_tick => state_next.OUTPUTSELECT
s_tick => state_next.OUTPUTSELECT
s_tick => state_next.OUTPUTSELECT
s_tick => state_next.OUTPUTSELECT
s_tick => rx_done_tick.OUTPUTSELECT
s_tick => s_next.OUTPUTSELECT
s_tick => s_next.OUTPUTSELECT
s_tick => s_next.OUTPUTSELECT
s_tick => s_next.OUTPUTSELECT
rx_done_tick <= rx_done_tick.DB_MAX_OUTPUT_PORT_TYPE
dout[0] <= b_reg[0].DB_MAX_OUTPUT_PORT_TYPE
dout[1] <= b_reg[1].DB_MAX_OUTPUT_PORT_TYPE
dout[2] <= b_reg[2].DB_MAX_OUTPUT_PORT_TYPE
dout[3] <= b_reg[3].DB_MAX_OUTPUT_PORT_TYPE
dout[4] <= b_reg[4].DB_MAX_OUTPUT_PORT_TYPE
dout[5] <= b_reg[5].DB_MAX_OUTPUT_PORT_TYPE
dout[6] <= b_reg[6].DB_MAX_OUTPUT_PORT_TYPE
dout[7] <= b_reg[7].DB_MAX_OUTPUT_PORT_TYPE


|kb_test|uart:uart_unit|fifo:fifo_rx_unit
clk => empty_reg.CLK
clk => full_reg.CLK
clk => r_ptr_reg[0].CLK
clk => r_ptr_reg[1].CLK
clk => w_ptr_reg[0].CLK
clk => w_ptr_reg[1].CLK
clk => array_reg[0][0].CLK
clk => array_reg[0][1].CLK
clk => array_reg[0][2].CLK
clk => array_reg[0][3].CLK
clk => array_reg[0][4].CLK
clk => array_reg[0][5].CLK
clk => array_reg[0][6].CLK
clk => array_reg[0][7].CLK
clk => array_reg[1][0].CLK
clk => array_reg[1][1].CLK
clk => array_reg[1][2].CLK
clk => array_reg[1][3].CLK
clk => array_reg[1][4].CLK
clk => array_reg[1][5].CLK
clk => array_reg[1][6].CLK
clk => array_reg[1][7].CLK
clk => array_reg[2][0].CLK
clk => array_reg[2][1].CLK
clk => array_reg[2][2].CLK
clk => array_reg[2][3].CLK
clk => array_reg[2][4].CLK
clk => array_reg[2][5].CLK
clk => array_reg[2][6].CLK
clk => array_reg[2][7].CLK
clk => array_reg[3][0].CLK
clk => array_reg[3][1].CLK
clk => array_reg[3][2].CLK
clk => array_reg[3][3].CLK
clk => array_reg[3][4].CLK
clk => array_reg[3][5].CLK
clk => array_reg[3][6].CLK
clk => array_reg[3][7].CLK
reset => empty_reg.PRESET
reset => full_reg.ACLR
reset => r_ptr_reg[0].ACLR
reset => r_ptr_reg[1].ACLR
reset => w_ptr_reg[0].ACLR
reset => w_ptr_reg[1].ACLR
reset => array_reg[0][0].ACLR
reset => array_reg[0][1].ACLR
reset => array_reg[0][2].ACLR
reset => array_reg[0][3].ACLR
reset => array_reg[0][4].ACLR
reset => array_reg[0][5].ACLR
reset => array_reg[0][6].ACLR
reset => array_reg[0][7].ACLR
reset => array_reg[1][0].ACLR
reset => array_reg[1][1].ACLR
reset => array_reg[1][2].ACLR
reset => array_reg[1][3].ACLR
reset => array_reg[1][4].ACLR
reset => array_reg[1][5].ACLR
reset => array_reg[1][6].ACLR
reset => array_reg[1][7].ACLR
reset => array_reg[2][0].ACLR
reset => array_reg[2][1].ACLR
reset => array_reg[2][2].ACLR
reset => array_reg[2][3].ACLR
reset => array_reg[2][4].ACLR
reset => array_reg[2][5].ACLR
reset => array_reg[2][6].ACLR
reset => array_reg[2][7].ACLR
reset => array_reg[3][0].ACLR
reset => array_reg[3][1].ACLR
reset => array_reg[3][2].ACLR
reset => array_reg[3][3].ACLR
reset => array_reg[3][4].ACLR
reset => array_reg[3][5].ACLR
reset => array_reg[3][6].ACLR
reset => array_reg[3][7].ACLR
rd => Mux8.IN5
rd => Mux9.IN5
rd => Mux10.IN5
rd => Mux11.IN5
rd => Mux12.IN5
rd => Mux13.IN5
wr => Mux8.IN4
wr => Mux9.IN4
wr => Mux10.IN4
wr => Mux11.IN4
wr => Mux12.IN4
wr => Mux13.IN4
wr => wr_en.IN1
w_data[0] => array_reg.DATAB
w_data[0] => array_reg.DATAB
w_data[0] => array_reg.DATAB
w_data[0] => array_reg.DATAB
w_data[1] => array_reg.DATAB
w_data[1] => array_reg.DATAB
w_data[1] => array_reg.DATAB
w_data[1] => array_reg.DATAB
w_data[2] => array_reg.DATAB
w_data[2] => array_reg.DATAB
w_data[2] => array_reg.DATAB
w_data[2] => array_reg.DATAB
w_data[3] => array_reg.DATAB
w_data[3] => array_reg.DATAB
w_data[3] => array_reg.DATAB
w_data[3] => array_reg.DATAB
w_data[4] => array_reg.DATAB
w_data[4] => array_reg.DATAB
w_data[4] => array_reg.DATAB
w_data[4] => array_reg.DATAB
w_data[5] => array_reg.DATAB
w_data[5] => array_reg.DATAB
w_data[5] => array_reg.DATAB
w_data[5] => array_reg.DATAB
w_data[6] => array_reg.DATAB
w_data[6] => array_reg.DATAB
w_data[6] => array_reg.DATAB
w_data[6] => array_reg.DATAB
w_data[7] => array_reg.DATAB
w_data[7] => array_reg.DATAB
w_data[7] => array_reg.DATAB
w_data[7] => array_reg.DATAB
empty <= empty_reg.DB_MAX_OUTPUT_PORT_TYPE
full <= full_reg.DB_MAX_OUTPUT_PORT_TYPE
r_data[0] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE
r_data[1] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
r_data[2] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
r_data[3] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
r_data[4] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
r_data[5] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
r_data[6] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
r_data[7] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|kb_test|uart:uart_unit|fifo:fifo_tx_unit
clk => empty_reg.CLK
clk => full_reg.CLK
clk => r_ptr_reg[0].CLK
clk => r_ptr_reg[1].CLK
clk => w_ptr_reg[0].CLK
clk => w_ptr_reg[1].CLK
clk => array_reg[0][0].CLK
clk => array_reg[0][1].CLK
clk => array_reg[0][2].CLK
clk => array_reg[0][3].CLK
clk => array_reg[0][4].CLK
clk => array_reg[0][5].CLK
clk => array_reg[0][6].CLK
clk => array_reg[0][7].CLK
clk => array_reg[1][0].CLK
clk => array_reg[1][1].CLK
clk => array_reg[1][2].CLK
clk => array_reg[1][3].CLK
clk => array_reg[1][4].CLK
clk => array_reg[1][5].CLK
clk => array_reg[1][6].CLK
clk => array_reg[1][7].CLK
clk => array_reg[2][0].CLK
clk => array_reg[2][1].CLK
clk => array_reg[2][2].CLK
clk => array_reg[2][3].CLK
clk => array_reg[2][4].CLK
clk => array_reg[2][5].CLK
clk => array_reg[2][6].CLK
clk => array_reg[2][7].CLK
clk => array_reg[3][0].CLK
clk => array_reg[3][1].CLK
clk => array_reg[3][2].CLK
clk => array_reg[3][3].CLK
clk => array_reg[3][4].CLK
clk => array_reg[3][5].CLK
clk => array_reg[3][6].CLK
clk => array_reg[3][7].CLK
reset => empty_reg.PRESET
reset => full_reg.ACLR
reset => r_ptr_reg[0].ACLR
reset => r_ptr_reg[1].ACLR
reset => w_ptr_reg[0].ACLR
reset => w_ptr_reg[1].ACLR
reset => array_reg[0][0].ACLR
reset => array_reg[0][1].ACLR
reset => array_reg[0][2].ACLR
reset => array_reg[0][3].ACLR
reset => array_reg[0][4].ACLR
reset => array_reg[0][5].ACLR
reset => array_reg[0][6].ACLR
reset => array_reg[0][7].ACLR
reset => array_reg[1][0].ACLR
reset => array_reg[1][1].ACLR
reset => array_reg[1][2].ACLR
reset => array_reg[1][3].ACLR
reset => array_reg[1][4].ACLR
reset => array_reg[1][5].ACLR
reset => array_reg[1][6].ACLR
reset => array_reg[1][7].ACLR
reset => array_reg[2][0].ACLR
reset => array_reg[2][1].ACLR
reset => array_reg[2][2].ACLR
reset => array_reg[2][3].ACLR
reset => array_reg[2][4].ACLR
reset => array_reg[2][5].ACLR
reset => array_reg[2][6].ACLR
reset => array_reg[2][7].ACLR
reset => array_reg[3][0].ACLR
reset => array_reg[3][1].ACLR
reset => array_reg[3][2].ACLR
reset => array_reg[3][3].ACLR
reset => array_reg[3][4].ACLR
reset => array_reg[3][5].ACLR
reset => array_reg[3][6].ACLR
reset => array_reg[3][7].ACLR
rd => Mux8.IN5
rd => Mux9.IN5
rd => Mux10.IN5
rd => Mux11.IN5
rd => Mux12.IN5
rd => Mux13.IN5
wr => Mux8.IN4
wr => Mux9.IN4
wr => Mux10.IN4
wr => Mux11.IN4
wr => Mux12.IN4
wr => Mux13.IN4
wr => wr_en.IN1
w_data[0] => array_reg.DATAB
w_data[0] => array_reg.DATAB
w_data[0] => array_reg.DATAB
w_data[0] => array_reg.DATAB
w_data[1] => array_reg.DATAB
w_data[1] => array_reg.DATAB
w_data[1] => array_reg.DATAB
w_data[1] => array_reg.DATAB
w_data[2] => array_reg.DATAB
w_data[2] => array_reg.DATAB
w_data[2] => array_reg.DATAB
w_data[2] => array_reg.DATAB
w_data[3] => array_reg.DATAB
w_data[3] => array_reg.DATAB
w_data[3] => array_reg.DATAB
w_data[3] => array_reg.DATAB
w_data[4] => array_reg.DATAB
w_data[4] => array_reg.DATAB
w_data[4] => array_reg.DATAB
w_data[4] => array_reg.DATAB
w_data[5] => array_reg.DATAB
w_data[5] => array_reg.DATAB
w_data[5] => array_reg.DATAB
w_data[5] => array_reg.DATAB
w_data[6] => array_reg.DATAB
w_data[6] => array_reg.DATAB
w_data[6] => array_reg.DATAB
w_data[6] => array_reg.DATAB
w_data[7] => array_reg.DATAB
w_data[7] => array_reg.DATAB
w_data[7] => array_reg.DATAB
w_data[7] => array_reg.DATAB
empty <= empty_reg.DB_MAX_OUTPUT_PORT_TYPE
full <= full_reg.DB_MAX_OUTPUT_PORT_TYPE
r_data[0] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE
r_data[1] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
r_data[2] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
r_data[3] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
r_data[4] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
r_data[5] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
r_data[6] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
r_data[7] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|kb_test|uart:uart_unit|uart_tx:uart_tx_unit
clk => tx_reg.CLK
clk => b_reg[0].CLK
clk => b_reg[1].CLK
clk => b_reg[2].CLK
clk => b_reg[3].CLK
clk => b_reg[4].CLK
clk => b_reg[5].CLK
clk => b_reg[6].CLK
clk => b_reg[7].CLK
clk => n_reg[0].CLK
clk => n_reg[1].CLK
clk => n_reg[2].CLK
clk => s_reg[0].CLK
clk => s_reg[1].CLK
clk => s_reg[2].CLK
clk => s_reg[3].CLK
clk => state_reg~1.DATAIN
reset => tx_reg.PRESET
reset => b_reg[0].ACLR
reset => b_reg[1].ACLR
reset => b_reg[2].ACLR
reset => b_reg[3].ACLR
reset => b_reg[4].ACLR
reset => b_reg[5].ACLR
reset => b_reg[6].ACLR
reset => b_reg[7].ACLR
reset => n_reg[0].ACLR
reset => n_reg[1].ACLR
reset => n_reg[2].ACLR
reset => s_reg[0].ACLR
reset => s_reg[1].ACLR
reset => s_reg[2].ACLR
reset => s_reg[3].ACLR
reset => state_reg~3.DATAIN
tx_start => state_next.OUTPUTSELECT
tx_start => state_next.OUTPUTSELECT
tx_start => state_next.OUTPUTSELECT
tx_start => state_next.OUTPUTSELECT
tx_start => s_next.OUTPUTSELECT
tx_start => s_next.OUTPUTSELECT
tx_start => s_next.OUTPUTSELECT
tx_start => s_next.OUTPUTSELECT
tx_start => b_next.OUTPUTSELECT
tx_start => b_next.OUTPUTSELECT
tx_start => b_next.OUTPUTSELECT
tx_start => b_next.OUTPUTSELECT
tx_start => b_next.OUTPUTSELECT
tx_start => b_next.OUTPUTSELECT
tx_start => b_next.OUTPUTSELECT
tx_start => b_next.OUTPUTSELECT
s_tick => state_next.OUTPUTSELECT
s_tick => state_next.OUTPUTSELECT
s_tick => state_next.OUTPUTSELECT
s_tick => state_next.OUTPUTSELECT
s_tick => s_next.OUTPUTSELECT
s_tick => s_next.OUTPUTSELECT
s_tick => s_next.OUTPUTSELECT
s_tick => s_next.OUTPUTSELECT
s_tick => n_next.OUTPUTSELECT
s_tick => n_next.OUTPUTSELECT
s_tick => n_next.OUTPUTSELECT
s_tick => b_next.OUTPUTSELECT
s_tick => b_next.OUTPUTSELECT
s_tick => b_next.OUTPUTSELECT
s_tick => b_next.OUTPUTSELECT
s_tick => b_next.OUTPUTSELECT
s_tick => b_next.OUTPUTSELECT
s_tick => b_next.OUTPUTSELECT
s_tick => b_next.OUTPUTSELECT
s_tick => state_next.OUTPUTSELECT
s_tick => state_next.OUTPUTSELECT
s_tick => state_next.OUTPUTSELECT
s_tick => state_next.OUTPUTSELECT
s_tick => n_next.OUTPUTSELECT
s_tick => n_next.OUTPUTSELECT
s_tick => n_next.OUTPUTSELECT
s_tick => state_next.OUTPUTSELECT
s_tick => state_next.OUTPUTSELECT
s_tick => tx_done_tick.OUTPUTSELECT
s_tick => s_next.OUTPUTSELECT
s_tick => s_next.OUTPUTSELECT
s_tick => s_next.OUTPUTSELECT
s_tick => s_next.OUTPUTSELECT
din[0] => b_next.DATAB
din[1] => b_next.DATAB
din[2] => b_next.DATAB
din[3] => b_next.DATAB
din[4] => b_next.DATAB
din[5] => b_next.DATAB
din[6] => b_next.DATAB
din[7] => b_next.DATAB
tx_done_tick <= tx_done_tick.DB_MAX_OUTPUT_PORT_TYPE
tx <= tx_reg.DB_MAX_OUTPUT_PORT_TYPE


|kb_test|key2ascii:key2a_unit
key_code[0] => Mux0.IN263
key_code[0] => Mux1.IN263
key_code[0] => Mux2.IN263
key_code[0] => Mux3.IN263
key_code[0] => Mux4.IN263
key_code[0] => Mux5.IN263
key_code[0] => Mux6.IN263
key_code[1] => Mux0.IN262
key_code[1] => Mux1.IN262
key_code[1] => Mux2.IN262
key_code[1] => Mux3.IN262
key_code[1] => Mux4.IN262
key_code[1] => Mux5.IN262
key_code[1] => Mux6.IN262
key_code[2] => Mux0.IN261
key_code[2] => Mux1.IN261
key_code[2] => Mux2.IN261
key_code[2] => Mux3.IN261
key_code[2] => Mux4.IN261
key_code[2] => Mux5.IN261
key_code[2] => Mux6.IN261
key_code[3] => Mux0.IN260
key_code[3] => Mux1.IN260
key_code[3] => Mux2.IN260
key_code[3] => Mux3.IN260
key_code[3] => Mux4.IN260
key_code[3] => Mux5.IN260
key_code[3] => Mux6.IN260
key_code[4] => Mux0.IN259
key_code[4] => Mux1.IN259
key_code[4] => Mux2.IN259
key_code[4] => Mux3.IN259
key_code[4] => Mux4.IN259
key_code[4] => Mux5.IN259
key_code[4] => Mux6.IN259
key_code[5] => Mux0.IN258
key_code[5] => Mux1.IN258
key_code[5] => Mux2.IN258
key_code[5] => Mux3.IN258
key_code[5] => Mux4.IN258
key_code[5] => Mux5.IN258
key_code[5] => Mux6.IN258
key_code[6] => Mux0.IN257
key_code[6] => Mux1.IN257
key_code[6] => Mux2.IN257
key_code[6] => Mux3.IN257
key_code[6] => Mux4.IN257
key_code[6] => Mux5.IN257
key_code[6] => Mux6.IN257
key_code[7] => Mux0.IN256
key_code[7] => Mux1.IN256
key_code[7] => Mux2.IN256
key_code[7] => Mux3.IN256
key_code[7] => Mux4.IN256
key_code[7] => Mux5.IN256
key_code[7] => Mux6.IN256
ascii_code[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
ascii_code[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
ascii_code[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
ascii_code[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
ascii_code[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
ascii_code[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
ascii_code[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
ascii_code[7] <= <GND>


